models:
  time_series:
    ARIMA:
      library: statsmodels.tsa.arima.model.ARIMA
      implementation: ARIMA
      hyperparameters:
        p: [1, 2, 3]
        d: [0, 1]
        q: [1, 2, 3]
    
    SARIMA:
      library: statsmodels.tsa.statespace.sarimax.SARIMAX
      implementation: SARIMAX
      hyperparameters:
        p: [1, 2, 3]
        d: [0, 1]
        q: [1, 2, 3]
        P: [1, 2]
        D: [0, 1]
        Q: [1, 2]
        s: [12]  # Seasonal period
    
    Prophet:
      library: fbprophet
      implementation: Prophet
      hyperparameters:
        growth: ['linear', 'logistic']
        changepoint_prior_scale: [0.01, 0.1]
        seasonality_prior_scale: [10, 20]
        holidays_prior_scale: [10, 20]
    
    XGBoost:
      library: xgboost.XGBRegressor
      implementation: XGBRegressor
      hyperparameters:
        max_depth: [3, 5, 7]
        learning_rate: [0.01, 0.1, 0.2]
        n_estimators: [100, 200, 300]
    
    LightGBM:
      library: lightgbm.LGBMRegressor
      implementation: LGBMRegressor
      hyperparameters:
        num_leaves: [31, 40]
        max_depth: [3, 5, 7]
        learning_rate: [0.01, 0.1, 0.2]
        n_estimators: [100, 200]
    
    LSTM:
      library: tensorflow.keras.models.Sequential
      implementation: LSTM
      hyperparameters:
        layers:
          - {units: 64, activation: 'relu'}
          - {units: 32, activation: 'relu'}
        optimizer: 'adam'
        loss: 'mean_squared_error'
        epochs: [10, 20, 50]
    
    GRU:
      library: tensorflow.keras.models.Sequential
      implementation: GRU
      hyperparameters:
        layers:
          - {units: 64, activation: 'relu'}
          - {units: 32, activation: 'relu'}
        optimizer: 'adam'
        loss: 'mean_squared_error'
        epochs: [10, 20, 50]
    
    XDeepFM:
      library: xdeepfm.XDeepFM
      implementation: XDeepFM
      hyperparameters:
        embedding_dim: [32, 64]
        hidden_units: [128, 256]
        learning_rate: [0.001, 0.01]
        epochs: [10, 20]
    
    VAR:
      library: statsmodels.tsa.api.VAR
      implementation: VAR
      hyperparameters:
        lags: [1, 3, 5]
    
    TBATS:
      library: tbats.TBATS
      implementation: TBATS
      hyperparameters:
        seasonal_periods: [12, 24]
        trend: [True, False]
        use_box_cox: [True, False]
        use_damped_trend: [True, False]
    
    DeepAR:
      library: gluonts.model.deepar.DeepAREstimator
      implementation: DeepAREstimator
      hyperparameters:
        num_layers: [2, 3]
        hidden_size: [64, 128]
        epochs: [10, 20]
        learning_rate: [0.001, 0.01]
